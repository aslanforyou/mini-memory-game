{"version":3,"sources":["images/index.js","images/1-pok.png","images/2-pok.png","images/3-pok.png","images/4-pok.png","images/5-pok.png","images/6-pok.png","images/7-pok.png","images/8-pok.png","components/common/Card.jsx","redux/actions/types.js","components/common/Button.jsx","components/Board.jsx","utils/index.js","components/ScoreBoard.jsx","components/Score.jsx","components/common/Select.jsx","components/Start.jsx","components/Game.jsx","App.jsx","reportWebVitals.js","redux/reducers/gameReducers.js","redux/reducers/scoreReducers.js","redux/reducers/playerReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["images","flipFront","css","flipBack","Front","styled","div","props","isOpen","Back","CardContainer","Card","open","src","onClick","indexes","showAllCards","alt","React","memo","SET_PLAYER","CLEAR_PLAYER","SET_GAME_FINISHED","SET_SCORE","RESTART_GAME","SHOW_SCORE","ButtonBase","button","Button","text","className","Row","Column","Container","PageTitle","h3","Header","initGame","shuffledImages","array","i","length","j","Math","floor","random","shuffle","concat","index","Array","fill","map","args","key","Board","player","useState","openCard","setOpenCard","config","setConfig","isDisabledBoard","setIsDisabledBoard","setShowAllCards","timer","setTimer","gameStart","setGameStart","dispatch","useDispatch","useEffect","interval","setInterval","t","timeoutId","setTimeout","Date","getTime","clearInterval","clearTimeout","handleClick","clickedCard","cardB","updatedConfig","slice","card","x","y","flat","every","gameDuration","score","MAX_SCORE","type","payload","date","toLocaleString","duration","handleFinishGame","row","rowprops","Table","DataTable","getScore","state","results","columns","name","selector","sortable","ScoreBoard","scoreData","Object","values","useSelector","data","forEach","game","title","ButtonContainer","getResult","gameResult","Score","SelectContainer","Input","options","onChange","players","placeholder","keys","option","value","label","getUsers","Start","userName","setUserName","Select","MainContainer","getPlayer","gameIsFinished","isFinished","getScoreBoard","scoreBoard","Game","gameFinished","showScoreBoard","isStartPage","isGameStarted","isGameFinished","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","persistedState","serializedState","localStorage","getItem","JSON","parse","err","console","log","loadState","store","createStore","subscribe","getState","stringify","setItem","saveState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63ac7fb1.chunk.js","sourcesContent":["import pokemon1 from './1-pok.png';\nimport pokemon2 from './2-pok.png';\nimport pokemon3 from './3-pok.png';\nimport pokemon4 from './4-pok.png';\nimport pokemon5 from './5-pok.png';\nimport pokemon6 from './6-pok.png';\nimport pokemon7 from './7-pok.png';\nimport pokemon8 from './8-pok.png';\n\nconst images = [\n  pokemon1,\n  pokemon2,\n  pokemon3,\n  pokemon4,\n  pokemon5,\n  pokemon6,\n  pokemon7,\n  pokemon8,\n];\n\nexport default images;\n","export default __webpack_public_path__ + \"static/media/1-pok.879a0d51.png\";","export default __webpack_public_path__ + \"static/media/2-pok.327f924f.png\";","export default __webpack_public_path__ + \"static/media/3-pok.a141f515.png\";","export default __webpack_public_path__ + \"static/media/4-pok.1b551d84.png\";","export default __webpack_public_path__ + \"static/media/5-pok.103c723a.png\";","export default __webpack_public_path__ + \"static/media/6-pok.afc64e9c.png\";","export default __webpack_public_path__ + \"static/media/7-pok.e26ec1e7.png\";","export default __webpack_public_path__ + \"static/media/8-pok.e16f756c.png\";","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst POKEBALL_SRC = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQHxcwMDuiAAtkfKc9otS5t4CEJ4aCKQwPqGQ&usqp=CAU';\n\nconst flipFront = css`\n  z-index: 0;\n  transform: rotateY(180deg);\n`;\nconst flipBack = css`\n  transform: rotateY(0);\n`;\nconst Front = styled.div`\n  ${(props) => props.isOpen && flipFront}\n`;\nconst Back = styled.div`\n  transform: rotateY(180deg);\n  ${(props) => props.isOpen && flipBack}\n`;\n\nconst CardContainer = styled.div`\n  user-select: none;\n  display: flex;\n  width: calc(22% - 10px);\n  box-sizing: border-box;\n  padding: 5px;\n  position: relative;\n  border-radius: 5px;\n  ${Front}, ${Back} {\n    cursor: pointer;\n    display: flex;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    position: absolute;\n    backface-visibility: hidden;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n    &:hover {\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n    }\n  }\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n`;\n\nfunction Card(props) {\n  const {\n    open, src, onClick, indexes, showAllCards,\n  } = props;\n  const isOpen = open || showAllCards;\n  return (\n    <CardContainer onClick={() => onClick(indexes)}>\n      <Back isOpen={isOpen}>\n        <img src={src} alt=\"\" />\n      </Back>\n      <Front isOpen={isOpen}>\n        <img src={POKEBALL_SRC} alt=\"\" />\n      </Front>\n    </CardContainer>\n  );\n}\n\nexport default React.memo(Card);\n","export const SET_PLAYER = 'SET_PLAYER';\nexport const CLEAR_PLAYER = 'CLEAR_PLAYER';\nexport const SET_GAME_FINISHED = 'SET_GAME_FINISHED';\nexport const SET_SCORE = 'SET_SCORE';\nexport const RESTART_GAME = 'RESTART_GAME';\nexport const SHOW_SCORE = 'SHOW_SCORE';\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonBase = styled.button`\n  outline: none;\n  font-size: 18px;\n  cursor: pointer;\n  position: relative;\n  padding: 5px;\n  white-space: nowrap;\n  border: 0.125rem solid black;\n  background-color: white;\n  text-transform: lowercase;\n  min-height: 35px;\n`;\n\nfunction Button(props) {\n  const { text, onClick, className } = props;\n  return (\n    <ButtonBase className={className} onClick={onClick}>\n      {text}\n    </ButtonBase>\n  );\n}\n\nexport default Button;\n","/* eslint-disable no-plusplus */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport images from '../images';\nimport Card from './common/Card';\nimport { shuffle } from '../utils';\nimport {\n  CLEAR_PLAYER,\n  SET_GAME_FINISHED,\n  SET_SCORE,\n} from '../redux/actions/types';\nimport Button from './common/Button';\n\nconst SIZE = 4;\nconst PREVIEW_TIMEOUT = 5000;\nconst MAX_SCORE = 100;\nconst BEST_POSSIBLE_TIME = 10;\nconst CLOSE_DELAY = 500;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: calc(23% - 10px);\n`;\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\n\nconst PageTitle = styled.h3`\n  margin: auto;\n  text-align: center;\n  font-size: 14px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  height: 35px;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst isEqualCards = (cardA, cardB) => cardA.src === cardB.src;\n\nconst initGame = () => {\n  const shuffledImages = shuffle(images.concat(images));\n  let index = shuffledImages.length;\n\n  return Array(SIZE)\n    .fill(0)\n    .map((...args) => Array(SIZE)\n      .fill(0)\n      .map((...kargs) => ({\n        key: index,\n        src: shuffledImages[--index],\n        indexes: [args[1], kargs[1]],\n        open: false,\n      })));\n};\n\nfunction Board(props) {\n  const { player } = props;\n  const [openCard, setOpenCard] = useState(null);\n  const [config, setConfig] = useState([]);\n  const [isDisabledBoard, setIsDisabledBoard] = useState(false);\n  const [showAllCards, setShowAllCards] = useState(true);\n  const [timer, setTimer] = useState(5);\n  const [gameStart, setGameStart] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setConfig(initGame());\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => setTimer((t) => t - 1), 1000);\n    const timeoutId = setTimeout(() => {\n      setShowAllCards(false);\n      setGameStart(new Date().getTime());\n      clearInterval(interval);\n    }, PREVIEW_TIMEOUT);\n\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(interval);\n    };\n  }, []);\n\n  const isGameFinished = () => config.flat().every((card) => card.open);\n\n  const handleFinishGame = () => {\n    const gameDuration = (new Date().getTime() - gameStart) / 1000;\n    const score = MAX_SCORE + BEST_POSSIBLE_TIME - gameDuration > 0\n      ? MAX_SCORE + BEST_POSSIBLE_TIME - gameDuration\n      : 0;\n\n    dispatch({\n      type: SET_SCORE,\n      payload: {\n        player,\n        score: Math.floor(score),\n        date: new Date().toLocaleString(),\n        gameDuration,\n      },\n    });\n\n    setTimeout(() => dispatch(\n      { type: SET_GAME_FINISHED, payload: { score: Math.floor(score), duration: gameDuration } },\n    ),\n    300);\n  };\n\n  const handleClick = ([i, j]) => {\n    const clickedCard = config[i][j];\n\n    if (clickedCard.open || isDisabledBoard || showAllCards) {\n      return;\n    }\n\n    const updatedConfig = config.slice();\n    const card = updatedConfig[i][j];\n\n    updatedConfig[i][j] = {\n      ...card,\n      open: !card.open,\n    };\n\n    if (openCard) {\n      if (!isEqualCards(clickedCard, openCard)) {\n        setIsDisabledBoard(true);\n        setTimeout(() => {\n          updatedConfig[i][j] = {\n            ...card,\n            open: false,\n          };\n\n          const [x, y] = openCard.indexes;\n\n          updatedConfig[x][y] = {\n            ...updatedConfig[x][y],\n            open: false,\n          };\n\n          setOpenCard(null);\n          setConfig(updatedConfig);\n          setIsDisabledBoard(false);\n        }, CLOSE_DELAY);\n      } else {\n        setOpenCard(null);\n      }\n    } else {\n      setOpenCard(clickedCard);\n    }\n\n    setConfig(updatedConfig);\n\n    if (isGameFinished()) {\n      handleFinishGame();\n    }\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Button text=\"reset game\" onClick={() => dispatch({ type: CLEAR_PLAYER })} />\n        {showAllCards && (\n          <PageTitle>\n            You have\n            {' '}\n            {timer}\n            {' '}\n            seconds to remember all cards!\n          </PageTitle>\n        )}\n      </Header>\n\n      <Column>\n        {config.map((row, i) => (\n          <Row key={i}>\n            {row.map((rowprops) => (\n              <Card\n                {...rowprops}\n                onClick={handleClick}\n                showAllCards={showAllCards}\n              />\n            ))}\n          </Row>\n        ))}\n      </Column>\n    </Container>\n  );\n}\n\nexport default Board;\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\nexport function shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n","/* eslint-disable no-return-assign */\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport DataTable from 'react-data-table-component';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { RESTART_GAME, CLEAR_PLAYER } from '../redux/actions/types';\nimport Button from './common/Button';\n\nconst Table = styled(DataTable)`\n  width: 100%;\n`;\n\nconst Container = styled.div`\n  @media (min-width: 425px) {\n    width: 100%;\n  }\n\n  Button {\n    margin-right: 10px;\n    width: 150px;\n  }\n`;\n\nconst getScore = (state) => state.score.results;\n\nconst columns = [\n  {\n    name: 'Player',\n    selector: 'player',\n  },\n  {\n    name: 'Played at',\n    selector: 'date',\n    sortable: true,\n  },\n  {\n    name: 'Score',\n    selector: 'score',\n    sortable: true,\n  },\n];\n\nfunction ScoreBoard() {\n  const dispatch = useDispatch();\n  const scoreData = Object.values(useSelector(getScore));\n  let data = [];\n\n  scoreData.forEach((game) => (data = data.concat(game)));\n\n  return (\n    <Container>\n      <Button\n        onClick={() => dispatch({ type: RESTART_GAME })}\n        text=\"restart game\"\n      />\n      <Button\n        onClick={() => dispatch({ type: CLEAR_PLAYER })}\n        text=\"reset game\"\n      />\n      <Table title=\"Game Score\" columns={columns} data={data} />\n    </Container>\n  );\n}\n\nexport default ScoreBoard;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from './common/Button';\nimport { CLEAR_PLAYER, RESTART_GAME, SHOW_SCORE } from '../redux/actions/types';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n  max-width: 320px;\n  margin: auto;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  Button {\n    margin-top: 10px;\n  }\n`;\n\nconst getResult = (state) => state.game.gameResult;\n\nfunction Score() {\n  const dispatch = useDispatch();\n  const { score, duration } = useSelector(getResult);\n\n  return (\n    <Container>\n      <h3>\n        Your Score:\n        {score}\n      </h3>\n      <h3>\n        Game duration:\n        {duration}\n      </h3>\n      <ButtonContainer>\n        <Button\n          text=\"Reset game\"\n          onClick={() => dispatch({ type: CLEAR_PLAYER })}\n        />\n        <Button\n          text=\"Restart game\"\n          onClick={() => dispatch({ type: RESTART_GAME })}\n        />\n        <Button\n          text=\"Show Result\"\n          onClick={() => dispatch({ type: SHOW_SCORE })}\n        />\n      </ButtonContainer>\n    </Container>\n  );\n}\n\nexport default Score;\n","import React from 'react';\nimport styled from 'styled-components';\nimport CreatableSelect from 'react-select/creatable';\n\nconst SelectContainer = styled.div`\n  min-width: 250px;\n  color: #555;\n`;\n\nconst getOptions = (options) => Object.keys(options).map((option) => ({\n  value: option,\n  label: option,\n}));\n\nfunction Input(props) {\n  const { onChange, players } = props;\n\n  return (\n    <SelectContainer>\n      <CreatableSelect\n        placeholder=\"Enter your name\"\n        onChange={onChange}\n        options={players && getOptions(players)}\n      />\n    </SelectContainer>\n  );\n}\nexport default Input;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Button from './common/Button';\nimport Select from './common/Select';\nimport { SET_PLAYER } from '../redux/actions/types';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n  padding: 15px;\n  box-sizing: border-box;\n\n  Button {\n    width: 250px;\n    margin-top: 25px;\n  }\n`;\n\nconst getUsers = (state) => state.player.players;\n\nfunction Start() {\n  const dispatch = useDispatch();\n  const players = useSelector(getUsers);\n  const [userName, setUserName] = useState('');\n\n  const startGame = () => {\n    if (!players[userName]) {\n      players[userName] = userName;\n    }\n\n    dispatch({\n      type: SET_PLAYER,\n      payload: {\n        players,\n        player: userName,\n      },\n    });\n  };\n\n  return (\n    <Container>\n      <Select\n        onChange={(value) => value && value.value && setUserName(value.value)}\n        players={players}\n        value={userName}\n      />\n      <Button text=\"Start\" onClick={startGame} />\n    </Container>\n  );\n}\n\nexport default Start;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport Board from './Board';\nimport ScoreBoard from './ScoreBoard';\nimport Score from './Score';\nimport Start from './Start';\n\nconst MainContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  padding: 30px;\n`;\n\nconst getPlayer = (state) => {\n  if (!state.player || state.player.player.length === 0) {\n    return null;\n  }\n  return state.player.player;\n};\n\nconst gameIsFinished = (state) => state.game.gameResult.isFinished;\n\nconst getScoreBoard = (state) => state.score.scoreBoard;\n\nfunction Game() {\n  const player = useSelector(getPlayer);\n  const gameFinished = useSelector(gameIsFinished);\n  const showScoreBoard = useSelector(getScoreBoard);\n\n  const isStartPage = !gameFinished && !player;\n  const isGameStarted = !gameFinished && player && !showScoreBoard;\n  const isGameFinished = gameFinished && !showScoreBoard;\n\n  return (\n    <MainContainer>\n      {isStartPage && <Start />}\n      {isGameStarted && <Board player={player} />}\n      {isGameFinished && <Score />}\n      {showScoreBoard && <ScoreBoard />}\n    </MainContainer>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  CLEAR_PLAYER,\n  SET_GAME_FINISHED,\n  RESTART_GAME,\n} from '../actions/types';\n\nconst initialState = {\n  gameResult: {},\n};\n\nexport default function gameReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_GAME_FINISHED: {\n      return {\n        ...state,\n        gameResult: {\n          ...state.gameResult,\n          isFinished: true,\n          score: action.payload.score,\n          duration: action.payload.duration,\n        },\n      };\n    }\n    case CLEAR_PLAYER: {\n      return { ...state, gameResult: {} };\n    }\n    case RESTART_GAME: {\n      return { ...state, gameResult: {} };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  SET_SCORE, SHOW_SCORE, CLEAR_PLAYER, RESTART_GAME,\n} from '../actions/types';\n\nconst initialState = {\n  scoreBoard: false,\n  results: {},\n};\n\nexport default function scoreReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCORE: {\n      const { player, ...game } = action.payload;\n\n      return {\n        ...state,\n        results: { ...state.results, [player]: [...(state[player] || []), { ...game, player }] },\n      };\n    }\n    case SHOW_SCORE: {\n      return { ...state, scoreBoard: true };\n    }\n    case CLEAR_PLAYER: {\n      return { ...state, scoreBoard: false };\n    }\n    case RESTART_GAME: {\n      return { ...state, scoreBoard: false };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  SET_PLAYER,\n  CLEAR_PLAYER,\n} from '../actions/types';\n\nconst initialState = {\n  player: '',\n  players: {},\n};\n\nexport default function playerReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_PLAYER: {\n      return {\n        ...state,\n        players: { ...state.players, ...action.payload.players },\n        player: action.payload.player,\n      };\n    }\n    case CLEAR_PLAYER: {\n      return { ...state, player: '' };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport gameReducer from './reducers/gameReducers';\nimport scoreReducer from './reducers/scoreReducers';\nimport playerReducer from './reducers/playerReducer';\n\nconst rootReducer = combineReducers({\n  game: gameReducer,\n  score: scoreReducer,\n  player: playerReducer,\n});\n\nexport default rootReducer;\n","/* eslint-disable no-undef */\n/* eslint-disable no-console */\nimport { createStore } from 'redux';\nimport rootReducer from './reducer';\n\nconst loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.log(err);\n    return undefined;\n  }\n};\n\nconst saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(() => {\n  const state = store.getState();\n  saveState({\n    game: state.game,\n    score: state.score,\n    player: state.player,\n  });\n});\n\nexport default store;\n","/* eslint-disable no-undef */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}